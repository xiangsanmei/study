{
  "name": "koa-compress",
  "description": "Compress middleware for koa",
  "version": "1.0.8",
  "author": {
    "name": "Jonathan Ong",
    "email": "me@jongleberry.com",
    "url": "http://jongleberry.com"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/koajs/compress"
  },
  "dependencies": {
    "statuses": "1",
    "koa-is-json": "1",
    "compressible": "2",
    "bytes": "1"
  },
  "devDependencies": {
    "istanbul-harmony": "0",
    "koa": "0",
    "mocha": "1",
    "should": "3",
    "supertest": "0"
  },
  "scripts": {
    "test": "NODE_ENV=test mocha --harmony-generators --require should --reporter spec",
    "test-cov": "NODE_ENV=test node --harmony-generators ./node_modules/.bin/istanbul cover ./node_modules/.bin/_mocha -- --require should",
    "test-travis": "NODE_ENV=test node --harmony-generators ./node_modules/.bin/istanbul cover ./node_modules/.bin/_mocha --report lcovonly -- --require should"
  },
  "files": [
    "index.js",
    "LICENSE",
    "HISTORY.md"
  ],
  "readme": "# Koa Compress [![Build Status](https://travis-ci.org/koajs/compress.png)](https://travis-ci.org/koajs/compress)\n\nCompress middleware for Koa\n\n## Example\n\n```js\nvar compress = require('koa-compress')\nvar koa = require('koa')\n\nvar app = koa()\napp.use(compress({\n  filter: function (content_type) {\n  \treturn /text/i.test(content_type)\n  },\n  threshold: 2048,\n  flush: require('zlib').Z_SYNC_FLUSH\n}))\n```\n\n## Options\n\nThe options are passed to `zlib`: http://nodejs.org/api/zlib.html#zlib_options\n\n### filter\n\nAn optional function that checks the response content type to decide whether to compress.\nBy default, it uses [compressible](https://github.com/expressjs/compressible).\n\n### threshold\n\nMinimum response size in bytes to compress.\nDefault `1024` bytes or `1kb`.\n\n## Manually turning compression on and off\n\nYou can always enable compression by setting `this.compress = true`.\nYou can always disable compression by setting `this.compress = false`.\nThis bypasses the filter check.\n\n```js\napp.use(function (next) {\n  return function *() {\n    this.compress = true\n    this.body = fs.createReadStream(file)\n  }\n})\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/koajs/compress/issues"
  },
  "_id": "koa-compress@1.0.8",
  "_from": "koa-compress@1"
}
