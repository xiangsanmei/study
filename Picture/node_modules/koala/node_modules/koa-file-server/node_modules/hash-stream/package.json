{
  "name": "hash-stream",
  "description": "Get a hash of a file or a stream",
  "version": "1.1.0",
  "author": {
    "name": "Jonathan Ong",
    "email": "me@jongleberry.com",
    "url": "http://jongleberry.com"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/stream-utils/hash-stream"
  },
  "dependencies": {
    "commander": "*",
    "native-or-bluebird": "1"
  },
  "devDependencies": {
    "bluebird": "2",
    "mocha": "0",
    "istanbul": "0"
  },
  "bin": {
    "hash-stream": "./bin/nhash"
  },
  "scripts": {
    "test": "mocha --reporter spec",
    "test-cov": "istanbul cover node_modules/mocha/bin/_mocha -- --reporter dot",
    "test-travis": "istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --reporter dot"
  },
  "keywords": [
    "hash",
    "stream"
  ],
  "files": [
    "bin",
    "index.js",
    "HISTORY.md",
    "LICENSE"
  ],
  "readme": "# Hash Stream\n\n[![NPM version][npm-image]][npm-url]\n[![Build status][travis-image]][travis-url]\n[![Test coverage][coveralls-image]][coveralls-url]\n[![Dependency Status][david-image]][david-url]\n[![License][license-image]][license-url]\n[![Downloads][downloads-image]][downloads-url]\n[![Gittip][gittip-image]][gittip-url]\n\nSimple wrapper around `crypto.createHash()` for files and streams.\n\n## Installation\n\n```shell\n$ npm install hash-stream\n```\n\n## API\n\n```js\nvar getHash = require('hash-stream')\n```\n\n## getHash(filename || stream, algorithm, callback)\n\n- `filename` - path of the file\n- `stream` - a readable stream\n- `algorithm` - any defined by `crypto.getHashes()`\n\nReturns a `hash` as a raw `Buffer`, so if you want a hex:\n\n```js\ngetHash('image.png', 'sha256', function (err, hash) {\n  hash = hash.toString('hex')\n})\n```\n\n## [CLI](http://en.wikipedia.org/wiki/Command-line_interface)\n\nYou can use `nhash` to hash a file and get the output instantly. The usage options are simple:\n```\n$ nhash --help\nUsage: nhash [options] [file]\n\nOptions:\n\n  -h, --help              output usage information\n  -V, --version           output the version number\n  -a, --algorithm <sha1>  the hash alorithm\n  -e, --encoding <hex>    the encoding of output\n```\n\n[npm-image]: https://img.shields.io/npm/v/hash-stream.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/hash-stream\n[github-tag]: http://img.shields.io/github/tag/stream-utils/hash-stream.svg?style=flat-square\n[github-url]: https://github.com/stream-utils/hash-stream/tags\n[travis-image]: https://img.shields.io/travis/stream-utils/hash-stream.svg?style=flat-square\n[travis-url]: https://travis-ci.org/stream-utils/hash-stream\n[coveralls-image]: https://img.shields.io/coveralls/stream-utils/hash-stream.svg?style=flat-square\n[coveralls-url]: https://coveralls.io/r/stream-utils/hash-stream\n[david-image]: http://img.shields.io/david/stream-utils/hash-stream.svg?style=flat-square\n[david-url]: https://david-dm.org/stream-utils/hash-stream\n[license-image]: http://img.shields.io/npm/l/hash-stream.svg?style=flat-square\n[license-url]: LICENSE\n[downloads-image]: http://img.shields.io/npm/dm/hash-stream.svg?style=flat-square\n[downloads-url]: https://npmjs.org/package/hash-stream\n[gittip-image]: https://img.shields.io/gratipay/jonathanong.svg?style=flat-square\n[gittip-url]: https://gratipay.com/jonathanong/\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/stream-utils/hash-stream/issues"
  },
  "_id": "hash-stream@1.1.0",
  "_from": "hash-stream@^1.0.0"
}
