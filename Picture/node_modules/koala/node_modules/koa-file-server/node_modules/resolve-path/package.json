{
  "name": "resolve-path",
  "description": "Resolve a relative path against a root path with validation",
  "version": "1.3.0",
  "author": {
    "name": "Jonathan Ong",
    "email": "me@jongleberry.com",
    "url": "http://jongleberry.com"
  },
  "contributors": [
    {
      "name": "Douglas Christopher Wilson",
      "email": "doug@somethingdoug.com"
    }
  ],
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/pillarjs/resolve-path"
  },
  "dependencies": {
    "http-errors": "~1.3.1",
    "path-is-absolute": "1.0.0"
  },
  "devDependencies": {
    "istanbul": "0.3.9",
    "mocha": "2.2.5"
  },
  "files": [
    "HISTORY.md",
    "LICENSE",
    "README.md",
    "index.js"
  ],
  "engines": {
    "node": ">= 0.8"
  },
  "scripts": {
    "test": "mocha --reporter spec --bail --check-leaks test/",
    "test-ci": "istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --reporter spec --check-leaks test/",
    "test-cov": "istanbul cover node_modules/mocha/bin/_mocha -- --reporter dot --check-leaks test/"
  },
  "keywords": [
    "resolve",
    "path",
    "safe"
  ],
  "readme": "# resolve-path\n\n[![NPM Version][npm-image]][npm-url]\n[![NPM Downloads][downloads-image]][downloads-url]\n[![Node.js Version][node-image]][node-url]\n[![Linux Build][travis-image]][travis-url]\n[![Windows Build][appveyor-image]][appveyor-url]\n[![Test Coverage][coveralls-image]][coveralls-url]\n\nResolve a relative path against a root path with validation.\n\nThis module would protect against commons attacks like `GET /../file.js`\nwhich reaches outside the root folder.\n\n## Installation\n\n```sh\n$ npm install resolve-path\n```\n\n## API\n\n```js\nvar resolvePath = require('resolve-path')\n```\n\n### resolvePath(relativePath)\n\nResolve a relative path against `process.cwd()` (the process's current working\ndirectory) and return an absolute path. *This will throw* if the resulting resolution\nseems malicious. The following are malicious:\n\n  - The relative path is an absolute path\n  - The relative path contains a NULL byte\n  - The relative path resolves to a path outside of `process.cwd()`\n  - The relative path traverses above `process.cwd()` and back down\n\n### resolvePath(rootPath, relativePath)\n\nResolve a relative path against the provided root path and return an absolute path.\n*This will throw* if the resulting resolution seems malicious. The following are\nmalicious:\n\n  - The relative path is an absolute path\n  - The relative path contains a NULL byte\n  - The relative path resolves to a path outside of the root path\n  - The relative path traverses above the root and back down\n\n## Example\n\n### Safely resolve paths in a public directory\n\n```js\nvar http = require('http')\nvar parseUrl = require('parseurl')\nvar path = require('path')\nvar resolvePath = require('resolve-path')\n\n// the public directory\nvar publicDir = path.join(__dirname, 'public')\n\n// the server\nvar server = http.createServer(function onRequest(req, res) {\n  try {\n    // get the pathname from the URL (decoded)\n    var pathname = decodeURIComponent(parseUrl(req).pathname)\n\n    if (!pathname) {\n      res.statusCode = 400\n      res.end('path required')\n      return\n    }\n\n    // remove leading slash\n    var filename = pathname.substr(1)\n\n    // resolve the full path\n    var fullpath = resolvePath(publicDir, filename)\n\n    // echo the resolved path\n    res.statusCode = 200\n    res.end('resolved to ' + fullpath)\n  } catch (err) {\n    res.statusCode = err.status || 500\n    res.end(err.message)\n  }\n})\n\nserver.listen(3000)\n```\n\n## License\n\n[MIT](LICENSE)\n\n[npm-image]: https://img.shields.io/npm/v/resolve-path.svg\n[npm-url]: https://npmjs.org/package/resolve-path\n[node-image]: https://img.shields.io/node/v/resolve-path.svg\n[node-url]: http://nodejs.org/download/\n[travis-image]: https://img.shields.io/travis/pillarjs/resolve-path/master.svg?label=linux\n[travis-url]: https://travis-ci.org/pillarjs/resolve-path\n[appveyor-image]: https://img.shields.io/appveyor/ci/dougwilson/resolve-path/master.svg?label=windows\n[appveyor-url]: https://ci.appveyor.com/project/dougwilson/resolve-path\n[coveralls-image]: https://img.shields.io/coveralls/pillarjs/resolve-path/master.svg\n[coveralls-url]: https://coveralls.io/r/pillarjs/resolve-path?branch=master\n[downloads-image]: https://img.shields.io/npm/dm/resolve-path.svg\n[downloads-url]: https://npmjs.org/package/resolve-path\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/pillarjs/resolve-path/issues"
  },
  "_id": "resolve-path@1.3.0",
  "_from": "resolve-path@^1.0.0"
}
