{
  "name": "koa-file-server",
  "description": "file serving middleware for koa",
  "version": "2.3.1",
  "author": {
    "name": "Jonathan Ong",
    "email": "me@jongleberry.com",
    "url": "http://jongleberry.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/koajs/file-server"
  },
  "dependencies": {
    "compressible": "2",
    "debug": "*",
    "hash-stream": "^1.0.0",
    "mime-types": "2",
    "mz": "^2.0.0",
    "resolve-path": "^1.0.0",
    "spdy-push": "^1.0.0"
  },
  "devDependencies": {
    "bluebird": "2",
    "co": "3",
    "istanbul-harmony": "0",
    "koa": "*",
    "mocha": "^2.2.5",
    "should": "3",
    "spdy": "*",
    "spdy-keys": "*",
    "supertest": "^1.0.1"
  },
  "scripts": {
    "test": "NODE_ENV=test mocha --require should --reporter spec --bail",
    "test-cov": "node node_modules/.bin/istanbul cover node_modules/mocha/bin/_mocha -- --reporter dot --require should",
    "test-travis": "node node_modules/.bin/istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --reporter dot --require should"
  },
  "license": "MIT",
  "files": [
    "index.js"
  ],
  "keywords": [
    "koa",
    "file",
    "server",
    "static"
  ],
  "readme": "\n# Koa File Server\n\n[![NPM version][npm-image]][npm-url]\n[![build status][travis-image]][travis-url]\n[![Test coverage][coveralls-image]][coveralls-url]\n[![Gittip][gittip-image]][gittip-url]\n\nAn opinionated file server. Designed to sit behind a CDN.\n\n- `sha256` etags and consequential 304s\n- Caches `fs.stat()` calls\n- Caches etag calculations\n- OPTIONS and 405 support\n- `index.html` files\n- Optionally serve hidden files\n- Caches gzipped versions of files\n- SPDY Push support\n\nDoes not support:\n\n- Dynamic files - assumes static files never change.\n  You will have to delete files from the cache yourself if files change.\n- Directory listing\n- Path decoding\n\n## API\n\n```js\nvar app = require('koa')()\napp.use(require('compress')())\napp.use(require('koa-file-server')(options))\n```\n\nOptions are:\n\n- `root` <process.cwd()> - root directory. nothing above this root directory can be served\n- `maxage` - cache control max age\n- `etag` - options for etags\n  - `algorithm` <sha256> - hashing algorithm to use\n  - `encoding` <base64> - encoding to use\n- `index` - serve `index.html` files\n- `hidden` <false> - show hidden files which leading `.`s\n\n### var file = yield* send(this, [path])\n\n```js\nvar send = require('koa-file-server')(options).send\n```\n\n`serve.send()` allows you to serve files as a utility.\nThis is helpful for arbitrary paths.\nThe middleware also adds `var file = yield* this.fileServer.send(path)`.\n\n`path` defaults to `this.request.path.slice(1)`,\nremoving the leading `/` to make the path relative.\n\nFor an example, see the middleware's source code.\n\n### var file = yield* push(this, path, [options])\n\n```js\nvar push = require('koa-file-server')(options).push\n```\n\nOptionally SPDY Push a file.\nThe middleware also adds `var file = yield* this.fileServer.send(path, [opts])`.\n\nUnlike `send()`, `path` is required.\n`path` must also be a relative path (without a leading `/`) relative to the `root`.\nThe push stream's URL will be `'/' + path`.\nErrors will be thrown on unknown files.\nThe only `option` is `priority: 7`.\n\n[npm-image]: https://img.shields.io/npm/v/koa-file-server.svg?style=flat\n[npm-url]: https://npmjs.org/package/koa-file-server\n[travis-image]: https://img.shields.io/travis/koajs/file-server.svg?style=flat\n[travis-url]: https://travis-ci.org/koajs/file-server\n[coveralls-image]: https://img.shields.io/coveralls/koajs/file-server.svg?style=flat\n[coveralls-url]: https://coveralls.io/r/koajs/file-server?branch=master\n[gittip-image]: https://img.shields.io/gittip/jonathanong.svg?style=flat\n[gittip-url]: https://www.gittip.com/jonathanong/\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/koajs/file-server/issues"
  },
  "_id": "koa-file-server@2.3.1",
  "_from": "koa-file-server@2"
}
