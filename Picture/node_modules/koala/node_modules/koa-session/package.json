{
  "name": "koa-session",
  "description": "Koa cookie session middleware",
  "repository": {
    "type": "git",
    "url": "git://github.com/koajs/session"
  },
  "version": "3.3.1",
  "keywords": [
    "koa",
    "middleware",
    "session",
    "cookie"
  ],
  "files": [
    "index.js"
  ],
  "devDependencies": {
    "istanbul-harmony": "0",
    "koa": "0",
    "mocha": "2",
    "should": "6",
    "supertest": "1"
  },
  "license": "MIT",
  "dependencies": {
    "debug": "~2.2.0",
    "deep-equal": "~1.0.0"
  },
  "scripts": {
    "test": "NODE_ENV=test mocha --harmony --require should --reporter spec",
    "test-cov": "NODE_ENV=test node --harmony ./node_modules/.bin/istanbul cover ./node_modules/.bin/_mocha -- --require should",
    "test-travis": "NODE_ENV=test node --harmony ./node_modules/.bin/istanbul cover ./node_modules/.bin/_mocha --report lcovonly -- --require should"
  },
  "readme": "# koa-session\n\n[![NPM version][npm-image]][npm-url]\n[![build status][travis-image]][travis-url]\n[![Test coverage][coveralls-image]][coveralls-url]\n[![Gittip][gittip-image]][gittip-url]\n[![David deps][david-image]][david-url]\n[![iojs version][iojs-image]][iojs-url]\n[![node version][node-image]][node-url]\n[![npm download][download-image]][download-url]\n\n[npm-image]: https://img.shields.io/npm/v/koa-session.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/koa-session\n[travis-image]: https://img.shields.io/travis/koajs/session.svg?style=flat-square\n[travis-url]: https://travis-ci.org/koajs/session\n[coveralls-image]: https://img.shields.io/coveralls/koajs/session.svg?style=flat-square\n[coveralls-url]: https://coveralls.io/r/koajs/session?branch=master\n[gittip-image]: https://img.shields.io/gittip/fengmk2.svg?style=flat-square\n[gittip-url]: https://www.gittip.com/fengmk2/\n[david-image]: https://img.shields.io/david/koajs/session.svg?style=flat-square\n[david-url]: https://david-dm.org/koajs/session\n[iojs-image]: https://img.shields.io/badge/io.js-%3E=_1.0-yellow.svg?style=flat-square\n[iojs-url]: http://iojs.org/\n[node-image]: https://img.shields.io/badge/node.js-%3E=_0.12-green.svg?style=flat-square\n[node-url]: http://nodejs.org/download/\n[download-image]: https://img.shields.io/npm/dm/koa-session.svg?style=flat-square\n[download-url]: https://npmjs.org/package/koa-session\n\n Simple cookie-based session middleware for Koa.\n\n## Installation\n\n```js\n$ npm install koa-session\n```\n\n## Example\n\n  View counter example:\n\n```js\nvar session = require('koa-session');\nvar koa = require('koa');\nvar app = koa();\n\napp.keys = ['some secret hurr'];\napp.use(session(app));\n\napp.use(function *(){\n  var n = this.session.views || 0;\n  this.session.views = ++n;\n  this.body = n + ' views';\n})\n\napp.listen(3000);\nconsole.log('listening on port 3000');\n```\n\n## Semantics\n\n  This module provides \"guest\" sessions, meaning any visitor will have a session,\n  authenticated or not. If a session is _new_ a Set-Cookie will be produced regardless\n  of populating the session.\n\n## API\n\n### Options\n\n  The cookie name is controlled by the `key` option, which defaults\n  to \"koa:sess\". All other options are passed to `ctx.cookies.get()` and\n  `ctx.cookies.set()` allowing you to control security, domain, path,\n  and signing among other settings.\n\n#### Custom `encode/decode` Support\n\n  Use `options.encode` and `options.decode` to customize your own encode/decode methods.\n\n### Hooks\n\n  - `valid()`: valid session value before use it\n  - `beforeSave()`: hook before save session\n\n### Session#isNew\n\n  Returns __true__ if the session is new.\n\n### Session#maxAge\n\n  Get cookie's maxAge.\n\n### Session#maxAge=\n\n  Set cookie's maxAge.\n\n### Destroying a session\n\n  To destroy a session simply set it to `null`:\n\n```js\nthis.session = null;\n```\n\n## Session Stores\n\n  This module only supports cookie sessions. There are many other modules listed in [koa's wiki](https://github.com/koajs/koa/wiki#wiki-sessions) for sessions that use database storage. Unlike Connect 2.x's session middleware, there is no main \"session\" middleware that you plugin different stores - each store is a completely different module.\n\n  If you're interested in creating your own koa session store, feel free to fork/extend this repository and add additional tests. At a minimum, it __should__ pass this repositories' tests that apply. Ideally, there would be a central repository with specifications and tests for all koa sessions, which would allow interoperability and consistency between session modules. If you're interested in working on such a project, let us know!\n\n## License\n\n  MIT\n",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/koajs/session/issues"
  },
  "_id": "koa-session@3.3.1",
  "_from": "koa-session@^3.2.0"
}
